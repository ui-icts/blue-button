package edu.uiowa.icts.bluebutton.resource;

/*
 * #%L
 * blue-button Spring MVC Web App
 * %%
 * Copyright (C) 2014 - 2015 University of Iowa Institute for Clinical and Translational Science (ICTS)
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.NonUniqueObjectException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.*;

import edu.uiowa.icts.bluebutton.domain.*;
import edu.uiowa.icts.exception.EntityNotFoundException;
import edu.uiowa.icts.spring.GenericDaoListOptions;

/**
 * Generated by Protogen 
 * @since ${date}
 */
@RestController
@RequestMapping( "/api/person" )
public class PersonResource extends AbstractBluebuttonApiResource {

    private static final Log log = LogFactory.getLog( PersonResource.class );
    
    @RequestMapping( value = { "{personId}" }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public Person get(@PathVariable( "personId" ) Integer personId ) {
    	 Person person = bluebuttonDaoService.getPersonService().findById( personId );
		 if (person == null){
			 throw new EntityNotFoundException();
		 } 
	     return person;
    }
    
    @RequestMapping( method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public Person create(@RequestBody @Valid Person person ) {
		 bluebuttonDaoService.getPersonService().save( person );
		 return person;
    }
    
    @RequestMapping( value = { "{personId}" }, method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public Person update(@PathVariable( "personId" ) Integer personId, @RequestBody @Valid Person person ) {
    	Person personRecord = bluebuttonDaoService.getPersonService().findById( personId );
    	if (personRecord == null || !personRecord.getPersonId().equals(person.getPersonId())){
			 throw new EntityNotFoundException(); 
		 } 
    	 bluebuttonDaoService.getPersonService().getSession().flush();
         bluebuttonDaoService.getPersonService().getSession().clear();
		 bluebuttonDaoService.getPersonService().update( person );
		 return person;
    }
    
    @RequestMapping( value = { "{personId}" }, method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE )
    public String delete(@PathVariable( "personId" ) Integer personId ) {
    	Person person = bluebuttonDaoService.getPersonService().findById( personId );
		 if (person == null){
			 throw new EntityNotFoundException();
		 } 
		 bluebuttonDaoService.getPersonService().delete(person);
	     return "";
    }
    
    @RequestMapping( value = {  "", "/"  }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public List<Person> list() {
    	 return bluebuttonDaoService.getPersonService().list();
    }

}