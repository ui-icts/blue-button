package edu.uiowa.icts.bluebutton.resource;

/*
 * #%L
 * blue-button Spring MVC Web App
 * %%
 * Copyright (C) 2014 - 2015 University of Iowa Institute for Clinical and Translational Science (ICTS)
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.NonUniqueObjectException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.*;

import edu.uiowa.icts.bluebutton.domain.*;
import edu.uiowa.icts.exception.EntityNotFoundException;
import edu.uiowa.icts.spring.GenericDaoListOptions;

/**
 * Generated by Protogen 
 * @since ${date}
 */
@RestController
@RequestMapping( "/api/loinccodecategory" )
public class LoincCodeCategoryResource extends AbstractBluebuttonApiResource {

    private static final Log log = LogFactory.getLog( LoincCodeCategoryResource.class );
    
    @RequestMapping( value = { "{loincCodeCategoryId}" }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public LoincCodeCategory get(@PathVariable( "loincCodeCategoryId" ) Integer loincCodeCategoryId ) {
    	 LoincCodeCategory loincCodeCategory = bluebuttonDaoService.getLoincCodeCategoryService().findById( loincCodeCategoryId );
		 if (loincCodeCategory == null){
			 throw new EntityNotFoundException();
		 } 
	     return loincCodeCategory;
    }
    
    @RequestMapping( method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public LoincCodeCategory create(@RequestBody @Valid LoincCodeCategory loincCodeCategory ) {
		 bluebuttonDaoService.getLoincCodeCategoryService().save( loincCodeCategory );
		 return loincCodeCategory;
    }
    
    @RequestMapping( value = { "{loincCodeCategoryId}" }, method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public LoincCodeCategory update(@PathVariable( "loincCodeCategoryId" ) Integer loincCodeCategoryId, @RequestBody @Valid LoincCodeCategory loincCodeCategory ) {
    	LoincCodeCategory loincCodeCategoryRecord = bluebuttonDaoService.getLoincCodeCategoryService().findById( loincCodeCategoryId );
    	if (loincCodeCategoryRecord == null || !loincCodeCategoryRecord.getId().equals(loincCodeCategory.getId())){
			 throw new EntityNotFoundException(); 
		 } 
    	 bluebuttonDaoService.getLoincCodeCategoryService().getSession().flush();
         bluebuttonDaoService.getLoincCodeCategoryService().getSession().clear();
		 bluebuttonDaoService.getLoincCodeCategoryService().update( loincCodeCategory );
		 return loincCodeCategory;
    }
    
    @RequestMapping( value = { "{loincCodeCategoryId}" }, method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE )
    public String delete(@PathVariable( "loincCodeCategoryId" ) Integer loincCodeCategoryId ) {
    	LoincCodeCategory loincCodeCategory = bluebuttonDaoService.getLoincCodeCategoryService().findById( loincCodeCategoryId );
		 if (loincCodeCategory == null){
			 throw new EntityNotFoundException();
		 } 
		 bluebuttonDaoService.getLoincCodeCategoryService().delete(loincCodeCategory);
	     return "";
    }
    
    @RequestMapping( value = {  "", "/"  }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public List<LoincCodeCategory> list() {
    	 return bluebuttonDaoService.getLoincCodeCategoryService().list();
    }

}